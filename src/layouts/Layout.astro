---
import { pwaInfo } from 'virtual:pwa-info'

export interface Props {
  title: string;
}

const { title } = Astro.props;
---

<!DOCTYPE html>
<html>
  <head>
    <meta charset="UTF-8" />
    <meta name="viewport" content="width=device-width, initial-scale=1.0,viewport-fit=cover">
    <link rel="icon" type="image/svg+xml" href="/icon.svg">
    <link rel="apple-touch-icon" href="/apple-touch-icon.png" sizes="180x180">
    <link rel="mask-icon" href="/icon.svg" color="#FFFFFF">
    <meta name="theme-color" content="#212129">
    <meta name="generator" content={Astro.generator}>
    <title>{title}</title>
    <meta name="description" content="A Minimal web UI for GeminiPro Chat.">
    { import.meta.env.HEAD_SCRIPTS && <Fragment set:html={import.meta.env.HEAD_SCRIPTS } /> }
    { pwaInfo && <Fragment set:html={pwaInfo.webManifest.linkTag} /> }
    { import.meta.env.PROD && pwaInfo && <Fragment set:html={pwaInfo.registerSW.scriptTag} /> }
  </head>
  <body>
    <slot />
  </body>
</html>

<style is:global>
  :root {
    --c-bg: #ffffff; /* 白色背景 */
    --c-fg: #333333; /* 深灰色字体，提高对比度 */
    --c-scroll: #cccccc; /* 浅灰色滚动条 */
    --c-scroll-hover: #999999; /* 深灰色滚动条悬停状态 */
    scrollbar-color: var(--c-scroll) var(--c-bg);
  }

  html {
    font-family: Arial, sans-serif; /* 使用更为常见的字体 */
    background-color: var(--c-bg);
    color: var(--c-fg);
  }

  html.dark {
    --c-bg: #1a1a1a; /* 深色模式背景 */
    --c-fg: #f5f5f5; /* 深色模式字体 */
    --c-scroll: #4d4d4d;
    --c-scroll-hover: #666666;
  }

  main {
    max-width: 80ch;
    min-height: calc(100vh - 4rem);
    margin: 0 auto;
    padding: 4rem 1rem;
  }

  /* 滚动条样式 */
  ::-webkit-scrollbar {
    width: 8px;
    height: 8px;
  }
  ::-webkit-scrollbar-thumb {
    background-color: var(--c-scroll);
    border-radius: 4px;
  }
  ::-webkit-scrollbar-thumb:hover {
    background-color: var(--c-scroll-hover);
  }
  ::-webkit-scrollbar-track {
    background-color: var(--c-bg);
  }

  /* 响应式设计调整 */
  @media screen and (max-width: 768px) {
    main {
      min-height: calc(100vh - 3.5rem);
      padding: 3rem 0.5rem;
    }
  }
  ::view-transition-old(root),
  ::view-transition-new(root) {
    animation: none;
    mix-blend-mode: normal;
  }

  .dark::view-transition-old(root) {
    z-index: 1;
  }

  .dark::view-transition-new(root) {
    z-index: 999;
  }

  ::view-transition-old(root) {
    z-index: 999;
  }

  ::view-transition-new(root) {
    z-index: 1;
  }
</style>

<script>
const darkSchema = window.matchMedia && window.matchMedia('(prefers-color-scheme: dark)').matches
const storageTheme = localStorage.getItem('theme')
const isDarkMode = storageTheme ? storageTheme === 'dark' : darkSchema
document.documentElement.classList.toggle('dark', isDarkMode)
</script>
